<?xml version='1.0' ?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/">

<script>
    request = "info";
    request_url = "";
    class = "audio";
    title_streamTitle = "Url:";
    
    translateBaseURL = "http://127.0.0.1/cgi-bin/translate?";

    storagePath = getStoragePath("tmp");
    storagePath_stream  = storagePath + "stream.dat";
    storagePath_playlist  = storagePath + "playlist.dat";
    streamArray         = readStringFromFile(storagePath_stream);
    
    storagePath_status  = storagePath + "streamStatus.dat";

    elapsedTime = "";
    loadingStatus = 0;
    checkStatus = 1;
    showLoading = 0;
    playStatus = 1;
    error = 0;
    
    server_url = "";
</script>

<onEnter>
    content = getStringArrayAt(streamArray,0);
    request_url = content;
    info_streamTitle = content;
    meta = getStringArrayAt(streamArray,3);
    setRefreshTime(100);
    startVideo = 1;
</onEnter>

<onExit>
    playItemURL(-1, 1);
    setRefreshTime(-1);
</onExit>

<onRefresh>
    vidProgress = getPlaybackStatus();
    bufProgress = getCachedStreamDataSize(0, 262144);
    playElapsed = getStringArrayAt(vidProgress, 0);
    playStatus = getStringArrayAt(vidProgress, 3);
    print("Play status =", playStatus);
    
    if(checkStatus != 0 &amp;&amp; loadingStatus == 0)
    {
      loadingStatus = 1;
      checkStatus = 0;
      
      statusUrl = translateBaseURL+request+","+meta+","+urlEncode(request_url);

      print("*** Check stream status: "+statusUrl);

      dlok = loadXMLFile(statusUrl);
      if (dlok != null)
      {
        error = getXMLElementCount("info","error");
        print("error=",error);
        
        if(error != 0 &amp;&amp; startVideo == 1)
        {
    	    title_Current = "Loading Error:";
    	    value = getXMLText("info","error");
    	    if(value != null)
    	    {
    	     info_currentSong = value;
    	    }
        }
        else
        {
    	    value = getXMLAttribute("info","stream","type");
    	    if(value != null)
    	     type = value;
    	    
    	    value = getXMLAttribute("info","stream","url");
    	    if(value != null)
    	     url = value;
  
    	    value = getXMLAttribute("info","stream","class");
    	    if(value != null)
    	     class = value;
  
    	    value = getXMLAttribute("info","stream","server");
    	    if(value != null)
    	     soft = value;
  
    	    value = getXMLAttribute("info","stream","server_url");
    	    if(value != null)
    	     server_url = value;
  
    	    value = getXMLAttribute("info","stream","protocol");
    	    if(value != null)
    	     protocol = value;
        
    	    info_contentType = type;
    	    info_streamTitle = url;
  
    	    value = getXMLText("info","status","content-type");
    	    if(value != null)
    	     info_contentType = value;
    	     
    	    title_contentType = "Content Type:";
  
    	    value = getXMLText("info","status","stream-title");
    	    if(value != null)
    	    {
            title_streamTitle = "Stream Title:";
    	      info_streamTitle = value;
    	    }
  
    	    value = getXMLText("info","status","current-song");
    	    if(value != null)
    	    {
      		  info_currentSong = value;
      		  title_Current = "Current Song:";
      		  print("info_currentSong=",info_currentSong);
      		}
      		else
      		{
      		  title_Current = "";
      		}
  
    	    value = getXMLText("info","status","stream-genre");
    	    if(value != null)
    	    {
    	      title_streamGenre = "Stream Genre:";
    		    info_streamGenre = value;
    		  }
  
    	    value = getXMLText("info","status","stream-status");
    	    if(value != null)
    	    {
    	      title_streamStatus = "Stream Status:";
    		    info_streamStatus = value;
    		  }
  
          value = getXMLText("info","status","average-listener-time");
          if(value != null)
          {
  	        info_averageListenTime = value;
  	      }
  	        
    	    value = getXMLText("info","status","listeners");
    	    if(value != null)
    		    info_currentListeners = value;
  
    	    value = getXMLText("info","status","listener-peak");
    	    if(value != null)
    		    info_listenerPeak = value;
    		    
    	    if(soft == "icecast" &amp;&amp; server_url != "")
    	    {
    	      title_Listen = "Listeners:";
  	        info_averageListenTime = info_currentListeners;
  	        if(info_listenerPeak != null &amp;&amp; info_listenerPeak != "")
  	         info_averageListenTime += "/" + info_listenerPeak;
    		  }
    		  else if(soft == "shoutcast" &amp;&amp; server_url != "")
    		  {
            title_Listen = "Average Listen:";
    		  }
    		  
    	    value = getXMLText("info","status","stream-bitrate");
    	    if(value != null)
    	    {
    	      title_streamBitrate = "Bitrate:";
    		    info_streamBitrate = value;
    		  }
  		  }
      }
      else
      {
        if(startVideo == 1)
        {
          startVideo = -1;
        }
      }
      loadingStatus = 0;
    }
    
    if (startVideo == -1)
    {
        print("+++ Quit");
        postMessage("return");
    }
    else if (startVideo == 1) 
    {
      if(error != 0)
      {
        print("+++ Display error");
        
        startVideo = -1;
        loadingStatus = 1;
        setRefreshTime(5000);
        redrawDisplay();
        updatePlaybackProgress("delete", "mediaDisplay", "progressBar");
      }
      else
      {
        setRefreshTime(1000);
        showLoading = 1;
        startVideo = 0;
        
        if(meta == "")
        {
          if(info_contentType != "")
            meta = "Content-type:"+info_contentType;
        }
        translateStreamURL = translateBaseURL+"stream,"+meta+","+urlEncode(url);

        if(class == "video")
        {
          if(protocol == "http" || protocol == "file")
            playItemURL(url, 0);
          else
            playItemURL(translateStreamURL, 0);
        }
        else if(class == "audio")
        {
          if((protocol == "http"  || protocol == "file") &amp;&amp; soft != "shoutcast")
            playItemURL(url, 0, "mediaDisplay", "previewWindow");
          else
            playItemURL(translateStreamURL, 0, "mediaDisplay", "previewWindow");
            
          if(soft == "" || server_url == "")
          {
            loadingStatus = 1;
          }
          else
          {
            request = "status";
            request_url = url;
            meta = server_url;
          }
        }
        else if(class == "playlist")
        {
          playingStatus = readStringFromFile(storagePath_status);
          if(playingStatus == "enter")
          {
            storagePath_xspf = storagePath + "xspfPath.dat";
            writeStringToFile(storagePath_xspf, url);
            jumpToLink("jumpLink");
          }
          else
          {
            postMessage("return");
          }
        }
        else if(class == "rss")
        {
          playingStatus = readStringFromFile(storagePath_status);
          if(playingStatus == "enter")
          {
            writeStringToFile(storagePath_status, "stop");
            jumpToLink("rssLink");
          }
          else
          {
            postMessage("return");
          }
        }
        else if(class == "cue")
        {
          playingStatus = readStringFromFile(storagePath_status);
          if(playingStatus == "enter")
          {
            writeStringToFile(storagePath_status, "stop");
            jumpToLink("cueLink");
          }
          else
          {
            postMessage("return");
          }
        }
        else if(class == "directory" &amp;&amp; (protocol == "ftp" || protocol == "file") )
        {
          playingStatus = readStringFromFile(storagePath_status);
          if(playingStatus == "enter")
          {
            writeStringToFile(storagePath_status, "stop");

            streamArray = null;
             
            streamArray = pushBackStringArray(streamArray, url);
            streamArray = pushBackStringArray(streamArray, info_streamTitle);
            streamArray = pushBackStringArray(streamArray, "");
            streamArray = pushBackStringArray(streamArray, meta);
            streamArray = pushBackStringArray(streamArray, class);
            
            writeStringToFile(storagePath_playlist, streamArray);

            jumpToLink("browserLink");
          }
          else
          {
            postMessage("return");
          }
        }
  
        redrawDisplay();
        updatePlaybackProgress(bufProgress, "mediaDisplay", "progressBar");
      }
    } 
    else
    {
      if (playElapsed != 0) 
      {
        x = Integer(playElapsed / 60);
        h = Integer(playElapsed / 3600);
        s = playElapsed - (x * 60);
        m = x - (h * 60);
        elapsedTime = sprintf("%s:", h);
        if(m &lt; 10)  elapsedTime += "0";
        elapsedTime += sprintf("%s:", m);
        if(s &lt; 10)  elapsedTime += "0";
        elapsedTime += sprintf("%s", s);
        print("elapsedTime =", elapsedTime);
        
        if (startVideo == 0) 
        {
          writeStringToFile(storagePath_status, "play");
          updatePlaybackProgress("delete", "mediaDisplay", "progressBar");
          startVideo = 2;
          statusCounter = 0;
          statusTimeout = 60;
        }
        else if(startVideo == 2 &amp;&amp; class != "video")
        {
          statusCounter += 1;
          print("statusCounter =", statusCounter);
          if (statusCounter &gt;= statusTimeout)
          {
            statusCounter = 0;
            checkStatus = 1;
          }
        }
      	redrawDisplay();
      } 
      else if (playStatus == 0) 
      {
          print("Media quit, return!");
          postMessage("return");
      }
      else 
      {
          print("no playing yet, update buffer progress ", bufProgress);
          updatePlaybackProgress(bufProgress, "mediaDisplay", "progressBar");
      }
    }
</onRefresh>

<mediaDisplay name=threePartsView
    showDefaultInfo = "no"
		sideLeftWidthPC = 0
		sideRightWidthPC = 0
    backgroundColor="0:0:0">
    
	<idleImage idleImageWidthPC="10" idleImageHeightPC="10"> image/POPUP_LOADING_01.png </idleImage>
	<idleImage idleImageWidthPC="10" idleImageHeightPC="10"> image/POPUP_LOADING_02.png </idleImage>
	<idleImage idleImageWidthPC="10" idleImageHeightPC="10"> image/POPUP_LOADING_03.png </idleImage>
	<idleImage idleImageWidthPC="10" idleImageHeightPC="10"> image/POPUP_LOADING_04.png </idleImage>
	<idleImage idleImageWidthPC="10" idleImageHeightPC="10"> image/POPUP_LOADING_05.png </idleImage>
	<idleImage idleImageWidthPC="10" idleImageHeightPC="10"> image/POPUP_LOADING_06.png </idleImage>
	<idleImage idleImageWidthPC="10" idleImageHeightPC="10"> image/POPUP_LOADING_07.png </idleImage>
	<idleImage idleImageWidthPC="10" idleImageHeightPC="10"> image/POPUP_LOADING_08.png </idleImage>
  	
  <text offsetXPC=5 offsetYPC=0 widthPC=100 heightPC=20 fontSize=22 backgroundColor=0:0:0 foregroundColor=200:200:200>
    <script>getStringArrayAt(streamArray,1);</script>
  </text>
  <image offsetXPC=0 offsetYPC=17 widthPC=100 heightPC=1>
		image/gradient_line.bmp
	</image>

  <text offsetXPC=10 offsetYPC=25 widthPC=17 heightPC=5 fontSize=16 backgroundColor=0:0:0 foregroundColor=40:200:200>
    <script>title_streamStatus;</script>
  </text>
  <text offsetXPC=27 offsetYPC=25 widthPC=65 heightPC=5 fontSize=16 backgroundColor=0:0:0 foregroundColor=200:200:200>
    <script>info_streamStatus;</script>
  </text>

  <text offsetXPC=10 offsetYPC=30 widthPC=17 heightPC=5 fontSize=16 backgroundColor=0:0:0 foregroundColor=40:200:200>
    <script>title_Listen;</script>
  </text>
  <text offsetXPC=27 offsetYPC=30 widthPC=65 heightPC=5 fontSize=16 backgroundColor=0:0:0 foregroundColor=200:200:200>
    <script>info_averageListenTime;</script>
  </text>

  <text offsetXPC=10 offsetYPC=35 widthPC=17 heightPC=5 fontSize=16 backgroundColor=0:0:0 foregroundColor=40:200:200>
    <script>title_streamTitle;</script>
  </text>
  <text offsetXPC=27 offsetYPC=35 widthPC=65 heightPC=5 fontSize=16 backgroundColor=0:0:0 foregroundColor=200:200:200>
    <script>info_streamTitle;</script>
  </text>

  <text offsetXPC=10 offsetYPC=40 widthPC=17 heightPC=5 fontSize=16 backgroundColor=0:0:0 foregroundColor=40:200:200>
    <script>title_contentType;</script>
  </text>
  <text offsetXPC=27 offsetYPC=40 widthPC=65 heightPC=5 fontSize=16 backgroundColor=0:0:0 foregroundColor=200:200:200>
    <script>info_contentType;</script>
  </text>

  <text offsetXPC=10 offsetYPC=45 widthPC=17 heightPC=5 fontSize=16 backgroundColor=0:0:0 foregroundColor=40:200:200>
    <script>title_streamBitrate;</script>
  </text>
  <text offsetXPC=27 offsetYPC=45 widthPC=65 heightPC=5 fontSize=16 backgroundColor=0:0:0 foregroundColor=200:200:200>
    <script>info_streamBitrate;</script>
  </text>

  <text offsetXPC=10 offsetYPC=50 widthPC=17 heightPC=5 fontSize=16 backgroundColor=0:0:0 foregroundColor=40:200:200>
    <script>title_streamGenre;</script>
  </text>
  <text offsetXPC=27 offsetYPC=50 widthPC=65 heightPC=5 fontSize=16 backgroundColor=0:0:0 foregroundColor=200:200:200>
    <script>info_streamGenre;</script>
  </text>

  <text offsetXPC=10 offsetYPC=60 widthPC=17 heightPC=5 fontSize=16 backgroundColor=0:0:0 foregroundColor=40:200:200>
    <script>title_Current;</script>
  </text>
  <text lines="2" offsetXPC=27 offsetYPC=60 widthPC=65 heightPC=10 fontSize=16 backgroundColor=0:0:0 foregroundColor=200:200:200>
    <script>info_currentSong;</script>
  </text>

  <previewWindow windowColor=0:0:0 offsetXPC=95 offsetYPC=95 widthPC=5 heightPC=5></previewWindow>

  <text offsetXPC=10 offsetYPC=85 widthPC=50 heightPC=5 fontSize=20 backgroundColor=0:0:0 foregroundColor=100:100:100>
    <script>elapsedTime;</script>
  </text>

  <progressBar backgroundColor=-1:-1:-1 offsetXPC=10 offsetYPC=75 widthPC=45 heightPC=20>
  	<bar offsetXPC=25 offsetYPC=48 widthPC=70 heightPC=6 barColor=200:200:200 progressColor=26:129:211 bufferColor=-1:-1:-1/>
  	<text offsetXPC=0 offsetYPC=40 widthPC=25 heightPC=20 fontSize=15 backgroundColor=-1:-1:-1 foregroundColor=200:200:200>
  	  <script>
  	        if (playStatus == 2) 
  	        {
              showstr = "buffering...";
  		      } 
  		      else 
  		      {
  		        showstr = "tune in...";
  		      }
  		      showstr;
  	  </script>
  	</text>
  	<destructor offsetXPC=0 offsetYPC=0 widthPC=100 heightPC=100 color=-1:-1:-1>
  	</destructor>
  </progressBar>

	<image offsetXPC=70 offsetYPC=70 widthPC=20 heightPC=20>
    <script>getStringArrayAt(streamArray,2);</script>
	</image>

  <onUserInput>
    input = currentUserInput();
    print("******* userInput=",input);
    ret = "false";
    if (input == "setup" || input == "guide")
    {
      writeStringToFile(storagePath_status, "stop");
      playItemURL(-1, 1);
      setRefreshTime(-1);
    	postMessage("return");
  		postMessage(input);
  		
    	ret = "true";
    }
    else if (input == "display")
    {
      statusCounter = statusTimeout;
      ret = "false";
    }
    else if (input == "video_stop" || input == "left")
    {
      writeStringToFile(storagePath_status, "stop");
      ret = "false";
    }
    ret;
  </onUserInput>

</mediaDisplay>

<jumpLink>
	<mediaDisplay name=onePartView>
		<idleImage idleImageWidthPC=10 idleImageHeightPC=10> image/POPUP_LOADING_01.png </idleImage>
		<idleImage idleImageWidthPC=10 idleImageHeightPC=10> image/POPUP_LOADING_02.png </idleImage>
		<idleImage idleImageWidthPC=10 idleImageHeightPC=10> image/POPUP_LOADING_03.png </idleImage>
		<idleImage idleImageWidthPC=10 idleImageHeightPC=10> image/POPUP_LOADING_04.png </idleImage>
		<idleImage idleImageWidthPC=10 idleImageHeightPC=10> image/POPUP_LOADING_05.png </idleImage>
		<idleImage idleImageWidthPC=10 idleImageHeightPC=10> image/POPUP_LOADING_06.png </idleImage>
		<idleImage idleImageWidthPC=10 idleImageHeightPC=10> image/POPUP_LOADING_07.png </idleImage>
		<idleImage idleImageWidthPC=10 idleImageHeightPC=10> image/POPUP_LOADING_08.png </idleImage>
	</mediaDisplay>
  <link>rss_file://./rss/xspf/xspfTrackList.rss</link>
</jumpLink>

<rssLink>
	<mediaDisplay name=threePartsView>
		<idleImage idleImageWidthPC=10 idleImageHeightPC=10> image/POPUP_LOADING_01.png </idleImage>
		<idleImage idleImageWidthPC=10 idleImageHeightPC=10> image/POPUP_LOADING_02.png </idleImage>
		<idleImage idleImageWidthPC=10 idleImageHeightPC=10> image/POPUP_LOADING_03.png </idleImage>
		<idleImage idleImageWidthPC=10 idleImageHeightPC=10> image/POPUP_LOADING_04.png </idleImage>
		<idleImage idleImageWidthPC=10 idleImageHeightPC=10> image/POPUP_LOADING_05.png </idleImage>
		<idleImage idleImageWidthPC=10 idleImageHeightPC=10> image/POPUP_LOADING_06.png </idleImage>
		<idleImage idleImageWidthPC=10 idleImageHeightPC=10> image/POPUP_LOADING_07.png </idleImage>
		<idleImage idleImageWidthPC=10 idleImageHeightPC=10> image/POPUP_LOADING_08.png </idleImage>
	</mediaDisplay>
  <link>rss_file://./rss/xspf/rss_mediaFeed.rss</link>
</rssLink>

<cueLink>
	<mediaDisplay name=threePartsView>
		<idleImage idleImageWidthPC=10 idleImageHeightPC=10> image/POPUP_LOADING_01.png </idleImage>
		<idleImage idleImageWidthPC=10 idleImageHeightPC=10> image/POPUP_LOADING_02.png </idleImage>
		<idleImage idleImageWidthPC=10 idleImageHeightPC=10> image/POPUP_LOADING_03.png </idleImage>
		<idleImage idleImageWidthPC=10 idleImageHeightPC=10> image/POPUP_LOADING_04.png </idleImage>
		<idleImage idleImageWidthPC=10 idleImageHeightPC=10> image/POPUP_LOADING_05.png </idleImage>
		<idleImage idleImageWidthPC=10 idleImageHeightPC=10> image/POPUP_LOADING_06.png </idleImage>
		<idleImage idleImageWidthPC=10 idleImageHeightPC=10> image/POPUP_LOADING_07.png </idleImage>
		<idleImage idleImageWidthPC=10 idleImageHeightPC=10> image/POPUP_LOADING_08.png </idleImage>
	</mediaDisplay>
  <link>rss_file://./rss/xspf/cue_Player.rss</link>
</cueLink>

<browserLink>
	<mediaDisplay name=threePartsView>
		<idleImage idleImageWidthPC=10 idleImageHeightPC=10> image/POPUP_LOADING_01.png </idleImage>
		<idleImage idleImageWidthPC=10 idleImageHeightPC=10> image/POPUP_LOADING_02.png </idleImage>
		<idleImage idleImageWidthPC=10 idleImageHeightPC=10> image/POPUP_LOADING_03.png </idleImage>
		<idleImage idleImageWidthPC=10 idleImageHeightPC=10> image/POPUP_LOADING_04.png </idleImage>
		<idleImage idleImageWidthPC=10 idleImageHeightPC=10> image/POPUP_LOADING_05.png </idleImage>
		<idleImage idleImageWidthPC=10 idleImageHeightPC=10> image/POPUP_LOADING_06.png </idleImage>
		<idleImage idleImageWidthPC=10 idleImageHeightPC=10> image/POPUP_LOADING_07.png </idleImage>
		<idleImage idleImageWidthPC=10 idleImageHeightPC=10> image/POPUP_LOADING_08.png </idleImage>
	</mediaDisplay>
  <link>rss_file://./rss/xspf/xspfBrowser.rss</link>
</browserLink>

<channel>
	<title>AV Stream Player</title>
	<link>./rss/xspf/audioStreamPlay.rss</link>
</channel>

</rss>
